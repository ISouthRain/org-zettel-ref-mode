* org-zettel-ref-mode

** 版本 0.2
   - 完善整体工作流, 提供自动化脚本处理不同格式的电子文档
   - 改善与其他工具的连接性, 通过自定义配置, org-zettel-ref-mode 生成的笔记文件可以以 denote, org-roam 的方式进行保存
   - 提供快速标记功能, 在源文件中高亮了某一个段落后, 可启动 =org-zettel-quick-markup= 快速为高亮文本添加加粗、斜体、下划线等标记
** 主要功能: 自动提取原文里的注释和摘要, 形成概览窗口, 保存为文献笔记
输入 =M-x org-zettel-ref-init= 命令, 即可调用 "概览窗口", 里面显示在原文里记录的注释, 以及被标记的文本.

1. 每一次形成概览, 都将自动形成一份文献笔记, 保存到你自定义的文件夹里
2. 快速注释, =M-x org-zettel-ref-add-quick-note= 即可直接在输入注释
3. 回顾文献笔记时, 可以从注释直接跳转回原文对应的位置, 重新阅读上下文
4. 提供一套将其他格式的文档, 转换成 org 格式的方法
5. (2024-08-29 新增)提供快速标记功能, 快速为源文件中的文本添加 org 里的加粗、斜体、下滑线等标记
** Demo
如题所示, 左边是窗口显示的是原文, 右边窗口显示的是概览.

[[file:demo/org-zettel-ref-mode-demo.png]]

** 适用范围
=org-zettel-ref-mode= 仅能在 org-mode 启动时生效:

1. 直接面向 org 文件
2. 其他用户自定义由 org-mode 方式进行处理的文本格式文件, 比如: md, txt 等
   在这种情况下, 面向该格式文件的 major-mode 的功能可能会受影响

不过, 我一般是将资料直接转成 org 格式保存, 因此第二种情况虽然存在, 但不常见.

** 价值: 兼顾广度, 和深度的阅读方法

TL;DR 版本:

- 简单保存, 摘录或复制资料是不够的,需要对信息进行加工和处理才能转化为有用的知识
- Zettelkasten方法强调用自己的话总结/回顾和建立联系, 提供了多次信息加工的机会, 但很多介绍忽视了Luhmann处理大量文献笔记的方法
- 文献笔记是一种兼顾效率和深度的方法, 它记录要点和启发, 便于快速回顾和深入阅读, 同时有助于区分存量信息和增量信息

完整版本:

作为多年的笔记爱好者, 文字工作者, 我逐步体会到一些 "反常识":

- 直接保存, 几乎是无用的.
- 直接摘录, 几乎是无用的.
- 直接复制, 几乎是无用的.

背后的原因是, 简单的搬运, 只是增加了资料, 而忽略将资料的再加工. 还记得这个经典的层递关系吗? 资料 -> 信息 -> 知识 -> 智慧.

Zettelkasten 方法总是强调让我们用自己的话总结, 要经常回顾过去的笔记, 增加笔记与笔记之间的联系, 从方法的角度, 它起码提供了 4-7 次信息加工的机会.

即便如此, 市面上讲述 Zettelkasten 的文字或视频, 总沉迷在介绍双链的狂热中, 陷入到直接资料保存的误区里 -- 基本上忽略了 Niklas Luhmann 通过海量文献笔记处理资料的方法.

我引用一个数字, 在 Luhmann 留下的 90000 多张笔记卡片里, 有 10000 多张是文献笔记.

Luhmann 那令人惊叹的高产, 来自夸张的资料处理数量, 而这背后, 是他处理这些资料时体现的高效, 也就是文献笔记的制作.

Luhmann 有一个习惯, 是一边读, 一边记文献笔记. 他的书或者资料, 没有划线, 没有边注, 非常干净, 就好像没读过一样. 每一个文献笔记, 基本上是一份资料的索引. 只在必要时候, 他才会摘录书中的原文.

不过, 当我了解科研人员的制作文献笔记之后, 就发现, Luhmann 的文献笔记几乎和一般的科研文献笔记是一致的. 也是用自己的话注释, 同时记录这句话灵感在论文具体的出处, 等以后有机会再深入阅读.

换言之, 文献笔记这种方法, 是兼顾了效率和深度.

在没有必要对一份资料深入了解时, 用文献笔记记录要点(不是重要的内容, 而是对自己有用的启发); 等有必要深入时，再通过文献笔记快速找到对应上下文, 进行深度阅读和思考, 不用浪费时间重头再读.

除了兼顾效率和深度之外, 文献笔记还有一个好处, 那就是非常容易分辨存量信息和增量信息. 已经为类似概念, 重点做过注释的, 就是存量信息, 下次再另外一个资料里遇到, 就没有必要进行注释; 反之, 完全没有了解过的概念, 数据, 就值得添加注释, 记录出处. 让新知的发现变得更加容易.

** 安装
*** 安装步骤
1. 下载 =org-zettel-ref-mode.el= 文件。
2. 将文件放置在您的 Emacs 加载路径中（例如 =~/.emacs.d/lisp/=）。
3. 在您的 Emacs 配置文件（如 ~/.emacs 或 ~/.emacs.d/init.el）中添加：

配置示例 1:
#+BEGIN_SRC emacs-lisp
(add-to-list 'load-path "~/.emacs.d/lisp/")
(require 'org-zettel-ref-mode)
#+END_SRC

配置示例 2:
#+BEGIN_SRC emacs-lisp
(use-package org-zettel-ref-mode
  :ensure t  ; 如果通过包管理器安装
  :init
  (setq org-zettel-ref-overview-directory "~/Documents/org-overviews/")
  :config
  (setq org-zettel-ref-quick-markup-key "C-c m"))
#+END_SRC

配置示例 3(Doom Emacs 用户):

在 =~/.doom.d/packages.el= 中：

#+BEGIN_SRC emacs-lisp
(package! org-zettel-ref-mode
  :recipe (:host github :repo "username/org-zettel-ref-mode"))
#+END_SRC

在 =~/.doom.d/config.el= 中：

#+BEGIN_SRC emacs-lisp
(use-package! org-zettel-ref-mode
  :config
  (setq org-zettel-ref-overview-directory "~/Documents/org-overviews/"))
#+END_SRC
4. 重新启动 Emacs 或评估刚添加的代码。

** 基本用法

*** 启用模式
在任何 org-mode 缓冲区中，运行：
=M-x org-zettel-ref-init=

*** 清理源文件中的 <<>>

由于添加笔记的核心功能是在原文里添加 <<>> 目标链接(target link)，但很多资料转换成 org 格式之后, 会自带很多 <<>> 的文本。

在第一次对 org 文件进行注释或标记文本之前, 可以用 =org-zettel-ref-clean-targets= 清理一下格式, 确保快速笔记的功能正常工作。

*** 添加快速笔记
1. 将光标放置在您想添加笔记的位置
2. =M-x org-zettel-ref-add-quick-note=
3. 输入笔记名称和内容

*** 快速添加标记
1. 在源文件中选中文本
2. =M-x org-zettel-ref-quick-markup=
3. 选择自己希望的标记风格

*** 同步概览文件
默认自动同步：默认在保存源文件时自动执行。
手动同步：=M-x org-zettel-ref-sync-overview=

*** ⚠️注意事项
1. 不要随便修改笔记文件名. 如果修改了, 在源文件上再次添加快速笔记/标记, 在同步时, 会生成重复的笔记.
** 高级配置

*** 自定义笔记保存模式
（2024-08-29 更新）org-zettel-ref-mode 提供了 normal、org-roam、denote 三种模式，让笔记文件能够以对应的格式进行保存，比如，选用 org-roam 模式之后, 所保存的笔记文件, 会自动附上 id，方便检索。

配置方法：

=(setq org-zettel-ref-mode-type 'normal) ;可选：'normal, 'denote, 'org-roam）=


*** 自定义概览文件位置
#+BEGIN_SRC emacs-lisp
(setq org-zettel-ref-overview-directory "~/my-notes/overviews/")
#+END_SRC


*** 调整自动同步行为
禁用自动同步：
#+BEGIN_SRC emacs-lisp
(org-zettel-ref-disable-auto-sync)
#+END_SRC

启用自动同步：
#+BEGIN_SRC emacs-lisp
(org-zettel-ref-enable-auto-sync)
#+END_SRC
** 工作流

[[file:demo/pkm-system-diagram.png]]

*** 使用脚本将 PDF, ePub, html, md, txt 等文档格式转换成 org 文件

脚本: [[file:convert-to-org.py]]

我写了一个 python 脚本，用于将各种格式的文档（包括PDF、EPUB、HTML、Markdown和TXT）转换为Org格式。它支持英文, 中文, 中英文混合的PDF文档，能够处理电子版和扫描版PDF。

主要功能
1. 支持多种文档格式转换（PDF、EPUB、HTML、Markdown、TXT）到Org格式
2. 自动识别并处理电子版和扫描版PDF
3. 使用OCR技术处理扫描版PDF，支持中英文识别
4. 文件大小检查，防止处理过大的文件
5. 扫描后, 将源文件归档
6. 详细的处理日志输出

使用说明：
1. 确保安装了所有必要的库（见下方库安装指南）
2. 运行脚本时需要提供三个参数：
   - --temp：临时文件夹路径
   - --reference：参考资料文件夹路径（输出Org文件的位置）
   - --archive：归档文件夹路径
3. 示例命令：
   ```
   python document_convert_to_org.py --temp ~/Documents/temp_convert/ --reference ~/Documents/ref/ --archive /Volumes/Collect/archives/
   ```

安装依赖：

1. PyPDF2
   安装命令：`pip install PyPDF2`
   用途：处理PDF文件，检查PDF是否为扫描版

2. pdf2image
   安装命令：`pip install pdf2image`
   用途：将PDF转换为图像以进行OCR
   注意：这个库依赖于poppler，您可能需要单独安装poppler

3. pytesseract
   安装命令：`pip install pytesseract`
   用途：进行OCR（光学字符识别）
   注意：这个库需要额外安装Tesseract OCR引擎
   - 在Ubuntu/Debian上：`sudo apt-get install tesseract-ocr`
   - 在macOS上（使用Homebrew）：`brew install tesseract`
   - 在Windows上，下载安装程序：https://github.com/UB-Mannheim/tesseract/wiki

4. Pillow (PIL)
   安装命令：`pip install Pillow`
   用途：图像处理，与pdf2image和pytesseract配合使用

5. 其他标准库（无需额外安装）：
   - os
   - sys
   - shutil
   - subprocess
   - argparse
   - time
   - platform
   - zipfile
   - tempfile
*** 使用 Markdownload 等浏览器拓展将网页保存 Markdown 文件到本地, 然后再用脚本转换
*** 使用 Whisper 将音频文件转换成文本
*** ⚠️注意事项
推荐使用该脚本对 ePub, markdown, txt, 电子版 PDF 文档进行转换.

不推荐将该脚本用于转换扫描版 PDF, 原因是转换速度慢, 而且转换的效果也不非常好.


** 常见问题解答

Q: 如何在多个项目之间使用 org-zettel-ref-mode？
A: 您可以为每个项目设置不同的概览目录，使用 =let-bound= 的方式在项目切换时动态改变 =org-zettel-ref-overview-directory= 的值。

Q: 概览文件变得太大怎么办？
A: 考虑按主题或时间周期分割概览文件。您可以自定义 =org-zettel-ref-create-or-open-overview-file= 函数来实现这一点。

Q: 如何备份我的笔记？
A: 将源文件和概览文件都纳入您的版本控制系统（如 Git）中。另外，定期执行文件系统级别的备份也是好的做法。

** 故障排除

如果遇到问题：
1. 确保您使用的是最新版本的 org-zettel-ref-mode。
2. 检查您的 Emacs 配置，确保没有冲突的设置。
3. 尝试在一个干净的 Emacs 配置（emacs -q）中重现问题。
4. 查看 =*Messages*= 缓冲区中的任何错误消息。

如果问题持续存在，请通过 GitHub 仓库提交 issue，附上问题描述和重现步骤。

** 贡献

我们欢迎社区贡献! 以下是一些参与方式：
- 报告 bugs 或提出功能建议。
- 提交补丁或拉取请求。
- 改进文档或编写教程。
- 分享您使用 org-zettel-ref-mode 的经验和技巧。

** 致谢

org-zettel-ref-mode 的灵感借鉴了朋友 [[https://github.com/lijigang][@lijigang]] 的 [[https://github.com/lijigang/org-marked-text-overview][org-marked-text-overview]], 由于自己改造的地方太多, 在经过沟通的情况下, 单独发布为 org-zettel-ref-mode.

** 版本历史
- v0.2 (2024-08-29)
  - 完善整体工作流, 提供自动化脚本处理不同格式的电子文档
  - 改善与其他工具的连接性, 通过自定义配置, org-zettel-ref-mode 生成的笔记文件可以以 denote, org-roam 的方式进行保存
  - 提供快速标记功能, 在源文件中高亮了某一个段落后, 可启动 =org-zettel-quick-markup= 快速为高亮文本添加加粗、斜体、下划线等标记
- v0.1 (2024-8-21): 初始发布
  - 实现基本的快速笔记和标记功能
  - 添加自动同步机制
  - 提供自定义选项

** 未来计划

- 改进性能，优化大型文件的处理
✅ 与其他知识管理 Package 的集成, 比如 org-roam, denote
- 支持更多文件格式(可能)

如果喜欢, 请 Star.
